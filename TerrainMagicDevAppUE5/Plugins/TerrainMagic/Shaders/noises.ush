struct Lib
{
  float random(float2 input){
    return frac(sin(dot(input, float2(23.3434, 48.3434))) * 23244.34);
  }

  float random2(float2 st){
	st = float2( dot(st,float2(127.1,311.7)),
              dot(st,float2(269.5,183.3)) );

    return -1.0 + 2.0*frac(sin(st)*43758.5453123);
  }

  float noise2(float2 st) {
    float2 i = floor(st);
    float2 f = frac(st);

    // Four corners in 2D of a tile
    float a = this.random(i);
    float b = this.random(i + float2(1.0, 0.0));
    float c = this.random(i + float2(0.0, 1.0));
    float d = this.random(i + float2(1.0, 1.0));

    float2 u = f * f * (3.0 - 2.0 * f);

    return lerp(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
  }

  float value_noise(float2 input) {
	float2 uvi = floor(UV);
	float2 uvf = smoothstep(0, 1, frac(UV));

	float top_a = this.random(uvi + float2(0, 0));
	float top_b = this.random(uvi + float2(1, 0));
	float bottom_a = this.random(uvi + float2(0, 1));
	float bottom_b = this.random(uvi + float2(1, 1));

	float top_mix =lerp(top_a, top_b, uvf.x);
	float bottom_mix = lerp(bottom_a, bottom_b, uvf.x);

	float noise = lerp(top_mix, bottom_mix, uvf.y);
	return noise;
  }

  float fbm(float2 st){
	float value = 0.0;
    float amplitude = .5;
    float frequency = 0.;

	for(uint lc=0; lc<6; lc++) {
		value += amplitude * this.noise2(st);
		st *= 2.;
		amplitude *= .5;
	}

	return value;
  }

  float grad_noise(float2 st) {
	float2 i = floor(st);
    float2 f = frac(st);

    float2 u = f*f*(3.0-2.0*f);

    float noise = lerp( lerp( dot( random2(i + float2(0.0,0.0) ), f - float2(0.0,0.0) ),
                     dot( random2(i + float2(1.0,0.0) ), f - float2(1.0,0.0) ), u.x),
                lerp( dot( random2(i + float2(0.0,1.0) ), f - float2(0.0,1.0) ),
                     dot( random2(i + float2(1.0,1.0) ), f - float2(1.0,1.0) ), u.x), u.y);

	return (noise + 1.0) / 2.0;
  }
};

Lib lib;


return lib.fbm(UV);